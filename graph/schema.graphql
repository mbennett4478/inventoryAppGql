type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
}


type Inventory {
  id: ID!
  name: String!
  createdAt: Time!
  updatedAt: Time!
  items: [InventoryItem!]!
}

type InventoryItem {
  inventoryId: ID!
  quantity: Int!
  item: Item!
}

type Item {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  name: String!
}

scalar Time

input NewItem {
  name: String!
}

input NewInventoryItem {
  quantity: Int!
  inventoryId: ID!
  itemId: ID!
}

input NewInventory {
  name: String!
}

input NewUser {
  firstName: String!
  lastName: String!
  email: String!
  passord: String!
  confirmationPassword: String!
}

type Query {
  inventories: [Inventory!]!
  item(id: ID): Item!
}

type Mutation {
  registerUser(input: NewUser): Boolean!
  createInventory(input: NewInventory): Inventory!
  createItem(input: NewItem): Item!
  addInventoryItem(input: NewInventoryItem): InventoryItem!
  removeInventoryItem(id: ID): String!
  deleteInventory(id: ID): Inventory!
}
